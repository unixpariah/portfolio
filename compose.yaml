services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
      cache_from:
        - client-cache
    image: client-cache
    volumes:
      - ./client:/app
    ports:
      - "3000:3000"
    networks:
      - web
  
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      cache_from:
        - server-cache
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: server-cache
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/target
    secrets:
      - github_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/db?sslmode=disable
    networks:
      - web
    depends_on:
      db:
        condition: service_healthy
  
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - web

volumes:
  database:
  tailscale-var-lib:

networks:
  web:
    name: web
    driver: bridge

secrets:
  github_api:
    file: /home/unixpariah/.config/sops-nix/secrets/github-api
  
